@page "/"
 
@inject HttpClient Http
@using System.Text.Json
@using System.Text.Json.Serialization

<PageTitle>Home</PageTitle>

<h1>@title</h1>
<button @onclick="GetStockDataAsync"> get IBM</button>

Current Stock: @stockData;
Open: @stockOpen;


@code{
    private string stockSymbol = "MSFT";
    private string apiKey = "Y1QV52EEEXUBUDNK";
    private string stockData = string.Empty;
    private string title = "before click";
    private string stockOpen = ""; 

    private async Task GetStockDataAsync()
    {
        string apiUrl = $"https://www.alphavantage.co/query?function=TIME_SERIES_INTRADAY&symbol={stockSymbol}&interval=5min&apikey={apiKey}";
        title = "been clicked";
        try
        {
            var response = await Http.GetFromJsonAsync<Root>(apiUrl);

            if (response != null)
            {
                stockData = response.MetaData.Symbol;
                stockOpen = response.TimeSeries.FirstOrDefault().Value.Open;

            }
        }
        catch (Exception ex)
        {
            stockData = $"Error: {ex.Message}";
        }
        StateHasChanged();
    }

    public class MetaData
    {
        [JsonPropertyName("1. Information")]
        public string Information { get; set; }

        [JsonPropertyName("2. Symbol")]
        public string Symbol { get; set; }

        [JsonPropertyName("3. Last Refreshed")]
        public string LastRefreshed { get; set; }

        [JsonPropertyName("4. Interval")]
        public string Interval { get; set; }

        [JsonPropertyName("5. Output Size")]
        public string OutputSize { get; set; }

        [JsonPropertyName("6. Time Zone")]
        public string TimeZone { get; set; }
    }

    public class TimeSeriesData
    {
        [JsonPropertyName("1. open")]
        public string Open { get; set; }

        [JsonPropertyName("2. high")]
        public string High { get; set; }

        [JsonPropertyName("3. low")]
        public string Low { get; set; }

        [JsonPropertyName("4. close")]
        public string Close { get; set; }

        [JsonPropertyName("5. volume")]
        public string Volume { get; set; }
    }

    public class Root
    {
        [JsonPropertyName("Meta Data")]
        public MetaData MetaData { get; set; }

        [JsonPropertyName("Time Series (5min)")]
        public Dictionary<string, TimeSeriesData> TimeSeries { get; set; }
    }

}